package br.com.fitsoft.fitdata.model;

// Generated 06/06/2013 09:53:01 by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Usuariodetalhe generated by hbm2java
 */
@Entity
@Table(name = "usuariodetalhe", catalog = "fitdata")
public class Usuariodetalhe implements java.io.Serializable {

	private String idUsuario;
	private Depto depto;
	private Usuario usuario;
	private Empresa empresa;
	private Long idCliente;
	private String tipoUsuario;
	private String emailUsuario;
	private char flagEnvioAlerta;
	private Integer auxCargo;
	private Date dataLogUpdate;
	private String usuarioLogUpdate;
	private Date dataLogInclusao;
	private String usuarioLogInclusao;

	public Usuariodetalhe() {
	}

	public Usuariodetalhe(Depto depto, Usuario usuario, Empresa empresa,
			String tipoUsuario, char flagEnvioAlerta, Date dataLogUpdate,
			String usuarioLogUpdate, Date dataLogInclusao,
			String usuarioLogInclusao) {
		this.depto = depto;
		this.usuario = usuario;
		this.empresa = empresa;
		this.tipoUsuario = tipoUsuario;
		this.flagEnvioAlerta = flagEnvioAlerta;
		this.dataLogUpdate = dataLogUpdate;
		this.usuarioLogUpdate = usuarioLogUpdate;
		this.dataLogInclusao = dataLogInclusao;
		this.usuarioLogInclusao = usuarioLogInclusao;
	}

	public Usuariodetalhe(Depto depto, Usuario usuario, Empresa empresa,
			Long idCliente, String tipoUsuario, String emailUsuario,
			char flagEnvioAlerta, Integer auxCargo, Date dataLogUpdate,
			String usuarioLogUpdate, Date dataLogInclusao,
			String usuarioLogInclusao) {
		this.depto = depto;
		this.usuario = usuario;
		this.empresa = empresa;
		this.idCliente = idCliente;
		this.tipoUsuario = tipoUsuario;
		this.emailUsuario = emailUsuario;
		this.flagEnvioAlerta = flagEnvioAlerta;
		this.auxCargo = auxCargo;
		this.dataLogUpdate = dataLogUpdate;
		this.usuarioLogUpdate = usuarioLogUpdate;
		this.dataLogInclusao = dataLogInclusao;
		this.usuarioLogInclusao = usuarioLogInclusao;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "usuario"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "idUsuario", unique = true, nullable = false, length = 15)
	public String getIdUsuario() {
		return this.idUsuario;
	}

	public void setIdUsuario(String idUsuario) {
		this.idUsuario = idUsuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "idEmpresa", referencedColumnName = "idEmpresa"),
			@JoinColumn(name = "idDepto", referencedColumnName = "idDepto") })
	public Depto getDepto() {
		return this.depto;
	}

	public void setDepto(Depto depto) {
		this.depto = depto;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idEmpresa", nullable = false, insertable = false, updatable = false)
	public Empresa getEmpresa() {
		return this.empresa;
	}

	public void setEmpresa(Empresa empresa) {
		this.empresa = empresa;
	}

	@Column(name = "idCliente")
	public Long getIdCliente() {
		return this.idCliente;
	}

	public void setIdCliente(Long idCliente) {
		this.idCliente = idCliente;
	}

	@Column(name = "tipoUsuario", nullable = false, length = 3, columnDefinition="char")
	public String getTipoUsuario() {
		return this.tipoUsuario;
	}

	public void setTipoUsuario(String tipoUsuario) {
		this.tipoUsuario = tipoUsuario;
	}

	@Column(name = "emailUsuario", length = 50)
	public String getEmailUsuario() {
		return this.emailUsuario;
	}

	public void setEmailUsuario(String emailUsuario) {
		this.emailUsuario = emailUsuario;
	}

	@Column(name = "flagEnvioAlerta", nullable = false, length = 1)
	public char getFlagEnvioAlerta() {
		return this.flagEnvioAlerta;
	}

	public void setFlagEnvioAlerta(char flagEnvioAlerta) {
		this.flagEnvioAlerta = flagEnvioAlerta;
	}

	@Column(name = "auxCargo")
	public Integer getAuxCargo() {
		return this.auxCargo;
	}

	public void setAuxCargo(Integer auxCargo) {
		this.auxCargo = auxCargo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dataLogUpdate", nullable = false, length = 19)
	public Date getDataLogUpdate() {
		return this.dataLogUpdate;
	}

	public void setDataLogUpdate(Date dataLogUpdate) {
		this.dataLogUpdate = dataLogUpdate;
	}

	@Column(name = "usuarioLogUpdate", nullable = false, length = 15)
	public String getUsuarioLogUpdate() {
		return this.usuarioLogUpdate;
	}

	public void setUsuarioLogUpdate(String usuarioLogUpdate) {
		this.usuarioLogUpdate = usuarioLogUpdate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dataLogInclusao", nullable = false, length = 19)
	public Date getDataLogInclusao() {
		return this.dataLogInclusao;
	}

	public void setDataLogInclusao(Date dataLogInclusao) {
		this.dataLogInclusao = dataLogInclusao;
	}

	@Column(name = "usuarioLogInclusao", nullable = false, length = 15)
	public String getUsuarioLogInclusao() {
		return this.usuarioLogInclusao;
	}

	public void setUsuarioLogInclusao(String usuarioLogInclusao) {
		this.usuarioLogInclusao = usuarioLogInclusao;
	}

}
